// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package buttons

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func AddButton() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<details class=\"dropdown\"><summary>Add</summary><ul dir=\"rtl\"><li><a onclick=\"AddUserDialog()\">Users</a></li><li><a onclick=\"AddBroadcastsDialog()\">Broadcasts</a></li><li><a onclick=\"AddVideofilesDialog()\">Videofiles</a></li><li><a onclick=\"AddBroadcastsFilesDialog()\">Broadcasts_files</a></li><li><a onclick=\"AddBroadcastsUsersDialog()\">Broadcasts_users</a></li></ul></details><script src=\"/static/js/buttons/add/dialogs.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func AddBroadcastsUsersDialog() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<dialog id=\"add_broadcasts_users_dialog\"><article><header><button aria-label=\"Close\" rel=\"prev\" onclick=\"CloseDialog(&#39;add_broadcasts_users_dialog&#39;)\"></button><p><strong><h2>Add Broadcast User</h2></strong></p></header><form id=\"buadd-form\"><input type=\"number\" id=\"add_bu_broadcast_id\" name=\"broadcastId\" placeholder=\"Broadcast id\" required> <input type=\"number\" id=\"add_bu_user_id\" name=\"userId\" placeholder=\"User id\" required> <button type=\"submit\">Add</button></form><div id=\"buadd-message\"></div></article></dialog><script src=\"/static/js/buttons/add/broadcasts_users.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func AddBroadcastsFilesDialog() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<dialog id=\"add_broadcasts_files_dialog\"><article><header><button onclick=\"CloseDialog(&#39;add_broadcasts_files_dialog&#39;)\" aria-label=\"Close\" rel=\"prev\"></button><p><strong><h2>Add Broadcast File</h2></strong></p></header><form id=\"bfadd-form\"><input min=\"0\" type=\"number\" id=\"add_bf_broadcast_id\" name=\"broadcast_id\" placeholder=\"Broadcast id\" required> <input min=\"0\" type=\"number\" id=\"add_bf_videofile_id\" name=\"videofile_id\" placeholder=\"Videofile id\" required> <button type=\"submit\">Add</button></form><div id=\"bfadd-message\"></div></article></dialog><script src=\"/static/js/buttons/add/broadcasts_files.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func AddBroadcastDialog() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<dialog id=\"add_broadcast_dialog\"><article><header><button onclick=\"CloseDialog(&#39;add_broadcast_dialog&#39;)\" aria-label=\"Close\" rel=\"prev\"></button><p><strong><h2>Add Broadcast</h2></strong></p></header><form id=\"badd-form\"><input type=\"datetime-local\" id=\"add_b_broadcast_start_time\" name=\"broadcast_start_time\" placeholder=\"Broadcast start time\" required> <input type=\"datetime-local\" id=\"add_b_broadcast_end_time\" name=\"broadcast_end_time\" placeholder=\"Broadcast end time\" required> <button type=\"submit\">Add</button></form><div id=\"badd-message\"></div></article></dialog><script src=\"/static/js/buttons/add/broadcasts.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func AddVideofileDialog() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<dialog id=\"add_videofile_dialog\"><article><header><button onclick=\"CloseDialog(&#39;add_videofile_dialog&#39;)\" aria-label=\"Close\" rel=\"prev\"></button><p><strong><h2>Add Videofile</h2></strong></p></header><form id=\"vadd-form\"><input type=\"text\" id=\"add_v_videofilename\" name=\"filename\" placeholder=\"File name\" required> <small>Enter valid name without numbers and special symbols</small> <input type=\"number\" min=\"0\" id=\"add_v_uploader\" name=\"uploader\" placeholder=\"Uploader id\" required> <input type=\"number\" id=\"add_v_size\" name=\"size\" min=\"1\" placeholder=\"File size in KB\" required> <small>Enter file size in MB</small> <input min=\"0\" type=\"number\" id=\"add_v_duration\" name=\"duration\" placeholder=\"File duration, seconds\" required> <button type=\"submit\">Add</button></form><div id=\"vadd-message\"></div></article></dialog><script src=\"/static/js/buttons/add/videofiles.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func AddUserDialog() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var6 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var6 == nil {
			templ_7745c5c3_Var6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<dialog id=\"add_user_dialog\"><article><header><p><strong><h2>Add user</h2></strong></p></header><form id=\"uadd-form\"><input required aria-describedby=\"add_u_first_name_error\" id=\"add_u_first_name\" type=\"text\" name=\"first_name\" placeholder=\"First name\" max=\"15\"> <small id=\"add_u_first_name_error\">Enter valid name without numbers and special symbols</small> <input required aria-describedby=\"add_u_second_name_error\" id=\"add_u_second_name\" type=\"text\" name=\"second_name\" placeholder=\"Second name\" max=\"15\"> <small id=\"add_u_second_name_error\">Enter valid name without numbers and special symbols</small> <input required aria-describedby=\"add_u_nickname_error\" id=\"add_u_nickname\" type=\"text\" name=\"nickname\" placeholder=\"Nickname\" max=\"15\"> <small id=\"add_u_nickname_error\">Lenght of nickname can't be more than 15 symbols</small> <input required aria-describedby=\"add_u_login_error\" id=\"add_u_login\" type=\"text\" name=\"login\" placeholder=\"Login\" max=\"15\"> <small id=\"add_u_login_error\">Login can't contain spaces or special symbols</small> <input required aria-describedby=\"add_u_email_error\" id=\"add_u_email\" type=\"email\" name=\"email\" placeholder=\"Email\"> <small id=\"add_u_email_error\">Enter valid email, for example \"unamed@gmail.com\"</small> <input required id=\"add_u_password\" type=\"text\" name=\"password\" placeholder=\"Password\"> <small>At least 8 characters long</small> <input required id=\"add_u_repassword\" type=\"text\" name=\"repassword\" placeholder=\"Repeat password\"> <small>Repeat password</small><footer><button type=\"submit\">Add</button><div id=\"add-message\"></div></footer></form></article></dialog><script src=\"/static/js/buttons/add/users.js\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
