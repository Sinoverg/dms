package tables
import (
	"time"
"fmt"
 "github.com/Cirqach/dms/internal/database/models"
)

templ Files(videofiles []models.Videofile, users []models.User) {
				<div class="search-field">
<form >
    <input class="form-control" type="search"
        name="search" placeholder="Begin typing to search video files..."
        hx-post="/search/videofiles"
        hx-trigger="keyup changed delay:500ms, search"
        hx-target="#table"
        hx-indicator=".htmx-indicator">
</form>
				</div>
				<details>
					<summary>Filter</summary>
				<div id="filter">
<form hx-post="/filter/videofiles" hx-target="#table">
	<select name="uploader">
		<option value="">User</option>
		for _,user := range users{
<option value={fmt.Sprintf("%d", user.Id)}>{user.Fname + " " + user.Sname + " (" + user.Nickname + ")"}</option>
		}
	</select>
	<label>
		Size
		<fieldset role="group">
		<input name="size_bottom" placeholder="Bottom limit of size"><input name="size_top" placeholder="Top limit of size">
		</fieldset>
	</label>
	<label>
		Duration
		<fieldset role="group">
		<input name="duration_bottom" placeholder="Bottom limit of duration"><input name="duration_top" placeholder="Top limit of duration">
		</fieldset>
	</label>
	<input type="submit" value="Filter">
</form>
				</div>
				</details>
				<div id="sort">
					<nav>

					<li><details class="dropdown">
						<summary>Size</summary>
						<ul>
							<li
						hx-get="/sort/videofiles/size/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/videofiles/size/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details></li>
					<li><details class="dropdown">
						<summary>Duration</summary>
						<ul>
							<li
						hx-get="/sort/videofiles/duration/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/videofiles/duration/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details></li>
					<li><details class="dropdown">
						<summary>Uploader</summary>
						<ul>
							<li
						hx-get="/sort/videofiles/uploader/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/videofiles/uploader/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details></li>

					</nav>
				</div>
				@VideofilesTable(videofiles,users)
			}
			templ VideofilesTable(videofiles []models.Videofile,users []models.User) {
				<div id="table">

		for _, videofile := range videofiles {
			<article style="border-style:groove; margin: 5px;">
				<header>
					<h4 style="text-align: center;">{ fmt.Sprintf("%d",videofile.Id) }</h4>
				</header>
					<form 
					hx-confirm="Are you sure you wish to update this record?"
					hx-patch={ fmt.Sprintf("/api/patch/videofiles/%d", videofile.Id) }
					hx-target={ fmt.Sprintf("#videofile%d",videofile.Id) }
					>
						<input
							type="text"
							name="filename"
							placeholder="File name"
							required
							value={ videofile.Filename }
							pattern="^[A-Za-z0-9]+.[A-Za-z0-9]+$"
						/>
						<select name="uploaderId">
							for _, user := range users {
								if user.Id == videofile.Uploader {
									<option value={fmt.Sprintf("%d", user.Id)} selected>{user.Fname + " " + user.Sname + " (" + user.Nickname + ")"}</option>
								} else {
									<option value={fmt.Sprintf("%d", user.Id)}>{user.Fname + " " + user.Sname + " (" + user.Nickname + ")"}</option>
								}
							}
						</select>
						<input
							type="number"
							name="size"
							min="1"
							placeholder="File size in KB"
							required
							value={ videofile.Size }
							pattern="^[0-9]+$"
						/>
						<small>Enter file size in KB</small>
						<input
							type="number"
							min="0"
							name="duration"
							placeholder="File duration in seconds"
							required
							value={ videofile.Duration }
							pattern="^[0-9]+$"
						/>
						<button
							type="button"
							hx-delete={ fmt.Sprintf("/api/delete/videofiles/%d", videofile.Id) }
							hx-confirm="Are you sure you wish to delete this record? IT CAN'T BE UNDONE!"
						hx-target={ fmt.Sprintf("#videofile%d",videofile.Id) }
						>Delete</button>
						<button
							type="submit"
						>Update</button>
					</form>
				<div id={ fmt.Sprintf("videofile%d",videofile.Id) }>
					
				</div>
			</article>
		}
				</div>
}

templ Users(users []models.User) {
				<div class="search-field">
<form >
    <input class="form-control" type="search"
        name="search" placeholder="Begin typing to search users..."
        hx-post="/search/users"
        hx-trigger="keyup changed delay:500ms, search"
		hx-target="#table"
		>
</form>
				</div>
<details>
					<summary>Filter</summary>
				<div id="filter">
<form hx-post="/filter/users" hx-target="#table">
	<label>
		First Name
		<input name="fname" placeholder="First Name">
	</label>
	<label>
		Second Name
		<input name="sname" placeholder="Second Name">
	</label>
	<label>
		Nickname
		<input name="nickname" placeholder="Nickname">
	</label>
	<label>
		Login
		<input name="login" placeholder="Login">
	</label>
	<label>
		Email
		<input name="email" type="email" placeholder="Email">
	</label>
	<input type="submit" value="Filter">

</form>
				</div>
				</details>
				<div id="sort">
					<nav>
					<li><details class="dropdown">
						<summary>First name</summary>
						<ul>
							<li
						hx-get="/sort/users/firstname/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/users/firstname/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details>	
</li>

					<li><details class="dropdown">
						<summary>Second name</summary>
						<ul>
							<li
						hx-get="/sort/users/secondaryname/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/users/secondaryname/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details></li>
					<li><details class="dropdown">
						<summary>Nickname</summary>
						<ul>
							<li
						hx-get="/sort/users/nickname/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/users/nickname/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details></li>
					<li><details class="dropdown">
						<summary>Login</summary>
						<ul>
							<li
						hx-get="/sort/users/login/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/users/login/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details></li>
					<li><details class="dropdown">
						<summary>Email</summary>
						<ul>
							<li
						hx-get="/sort/users/email/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/users/email/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details></li>
				
					</nav>
				</div>
@UsersTable(users)
			}
templ UsersTable(users []models.User) {

				<div id="table">
		for _, user := range users {
			<article id="element" style="border-style:groove; margin: 5px;">
				<header>
					<h4 style="text-align: center;">{ fmt.Sprintf("%d",user.Id) }</h4>
				</header>
			<form style="margin-left: 5px;"
			hx-patch={ fmt.Sprintf("/api/patch/users/%d", user.Id)} 
			hx-confirm="Are you sure you wish to update this record?"
			hx-target={ fmt.Sprintf("#user%d",user.Id) }>
				<input
					required
					type="text"
					name="first_name"
					placeholder="First name"
					value={ user.Fname }
					pattern="^[A-Za-z]+$"
				/>
				<input
					required
					type="text"
					name="second_name"
					placeholder="Second name"
					max="15"
					value={ user.Sname }
					pattern="^[A-Za-z]+$"
				/>
				<input
					required
					type="text"
					name="nickname"
					placeholder="Nickname"
					max="15"
					value={ user.Nickname }
				/>
				<input
					required
					type="text"
					name="login"
					placeholder="Login"
					value={user.Login}
					pattern="^[A-Za-z0-9]+$"
				/>
				<input
					required
					type="email"
					name="email"
					placeholder="Email"
					value={user.Email}
					pattern="^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
				/>
				<input 
					required 
					type="text" 
					name="password" 
					placeholder="Password"
					value={user.Password}
				/>

		<button type="button" 
			hx-delete={ fmt.Sprintf("/api/delete/users/%d", user.Id)} 
			hx-confirm="Are you sure you wish to this record? IT CAN'T BE UNDONE!"
			hx-target={ fmt.Sprintf("#user%d",user.Id) }
			>
		Delete</button> 

		<button type="submit" 
		>Update</button> 

				</form>
		<div id={ fmt.Sprintf("user%d",user.Id) }>
			
		</div>
			</article>
		}
	</div>
}

templ Broadcast(broadcast []models.Broadcast) {
				<div class="search-field">
<form>
    <input class="form-control" type="search"
        name="search" placeholder="Begin typing to search broadcasts..."
        hx-post="/search/broadcasts"
        hx-trigger="keyup changed delay:500ms, search"
        hx-target="#table"
        hx-indicator=".htmx-indicator">
</form>
				</div>
<details>
					<summary>Filter</summary>
				<div id="filter">
<form hx-post="/filter/broadcasts" hx-target="#table">
	<label>
		Start Time
		<input type="datetime-local" name="start_time">
	</label>
	<label>
		End Time
		<input type="datetime-local" name="end_time">
	</label>
	<input type="submit" value="Filter">
</form>
				</div>
				</details>
				<div id="sort">
					<nav>
					<li>
						<details class="dropdown">
						<summary>Start time</summary>
						<ul>
							<li
						hx-get="/sort/broadcasts/broadcaststarttime/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/broadcasts/broadcaststarttime/desc"

						hx-target="#table"
							>Descending</li>
						</ul>
					</details>
				</li>
					<li>
						<details class="dropdown">
						<summary>End time</summary>
						<ul>
							<li
						hx-get="/sort/broadcasts/broadcastendtime/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/broadcasts/broadcastendtime/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details>
				</li>

						
					</nav>
				</div>

@BroadcastsTable(broadcast)
}
templ BroadcastsTable(broadcast []models.Broadcast) {

				<div id="table">
	<section>
		for _, b := range broadcast {
			<article id="element" style="border-style:groove; margin: 5px;">
				<header>
					<h4 style="text-align: center;">{ fmt.Sprintf("%d",b.Id) }</h4>
				</header>
				<form 
			hx-patch={ fmt.Sprintf("/api/patch/broadcasts/%d", b.Id)} 
			hx-confirm="Are you sure you wish to update this record?"
			hx-target={ fmt.Sprintf("#broadcast%d",b.Id) }
			>
				<input
					type="datetime-local"
					name="broadcast_start_time"
					placeholder="Broadcast start time"
					value={b.StartTime.Format(time.DateTime)}

					required
				/>
				<input
					type="datetime-local"
					name="broadcast_end_time"
					placeholder="Broadcast end time"
					value={ b.EndTime.Format(time.DateTime) }
					required
				/>
		<button type="button" 
		hx-delete={ fmt.Sprintf("/api/delete/broadcasts/%d", b.Id)} 
		hx-confirm="Are you sure you wish to this record? IT CAN'T BE UNDONE!"
			hx-target={ fmt.Sprintf("#broadcast%d",b.Id) }
		>Delete</button> 
		<button type="submit" 
		>Update</button> 
				<div id={ fmt.Sprintf("broadcast%d",b.Id) }>
					
				</div>
		</form>
			</article>
		}
	</section></div>
}

templ Broadcasts_files(broadcast_files []models.BroadcastFiles, broadcasts []models.Broadcast, videofiles []models.Videofile) {
				<details>
					<summary>Filter</summary>
				<div id="filter">
<form hx-post="/filter/broadcasts_files" hx-target="#table">
	<select name="broadcastId">
		<option value="">Broadcast</option>
		for _,broadcast := range broadcasts{
<option value={fmt.Sprintf("%d", broadcast.Id)}>{broadcast.StartTime.Format(time.DateTime) } - { broadcast.EndTime.Format(time.DateTime) }</option>
		}
	</select>
	<select name="videofileId">
		<option value="">Videofile</option>
		for _,videofile := range videofiles{
<option value={fmt.Sprintf("%d", videofile.Id)}>{videofile.Filename}</option>
		}
	</select>
	<input type="submit" value="Filter">
</form>
				</div>
				</details>
				<div id="sort">
					<nav>
					<li>
						<details class="dropdown">
						<summary>Broadcast</summary>
						<ul>
							<li
						hx-get="/sort/broadcasts_files/broadcastid/asc"

						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/broadcasts_files/broadcastid/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details>
					</li>
					<li><details class="dropdown">
						<summary>Videofile</summary>
						<ul>
							<li
						hx-get="/sort/broadcasts_files/fileid/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/broadcasts_files/fileid/desc"
						hx-target="#table"
							>Descending</li>
						</ul></details>
					</li>	
					</nav>
				</div>

    @BroadcastsFilesTable(broadcast_files, broadcasts, videofiles)
}

templ BroadcastsFilesTable(broadcast_files []models.BroadcastFiles, broadcasts []models.Broadcast, videofiles []models.Videofile) {
    <div id="table">
        for _, bf := range broadcast_files {
            <article>
                <form
                    hx-post={ fmt.Sprintf("/api/patch/broadcasts-files/%d?videofile_id=%d", bf.BroadcastId, bf.VideofileId) }
                    hx-confirm="Are you sure you wish to update this record?"
                    hx-target={ fmt.Sprintf("#broadcast%d_files%d", bf.BroadcastId, bf.VideofileId) }
                >
                    <label>Broadcast</label>
                    <select name="broadcastId">
                        for _, broadcast := range broadcasts {
                            if broadcast.Id == bf.BroadcastId {
                                <option value={fmt.Sprintf("%d", broadcast.Id)} selected>
                                    {broadcast.StartTime.Format(time.DateTime)} - {broadcast.EndTime.Format(time.DateTime)}
                                </option>
                            } else {
                                <option value={fmt.Sprintf("%d", broadcast.Id)}>
                                    {broadcast.StartTime.Format(time.DateTime)} - {broadcast.EndTime.Format(time.DateTime)}
                                </option>
                            }
                        }
                    </select>
                    
                    <label>Videofile</label>
                    <select name="videofileId">
                        for _, videofile := range videofiles {
                            if videofile.Id == bf.VideofileId {
                                <option value={fmt.Sprintf("%d", videofile.Id)} selected>
                                    {videofile.Filename} ({videofile.Duration}, {videofile.Size} KB)
                                </option>
                            } else {
                                <option value={fmt.Sprintf("%d", videofile.Id)}>
                                    {videofile.Filename} ({videofile.Duration}, {videofile.Size} KB)
                                </option>
                            }
                        }
                    </select>
                    
                    <button type="submit">Update</button>
                </form>
                
                <button
                    type="button"
                    hx-delete={ fmt.Sprintf("/api/delete/broadcasts_files/%d?videofile_id=%d", bf.BroadcastId, bf.VideofileId) }
                    hx-confirm="Are you sure you wish to delete this record? IT CAN'T BE UNDONE!"
                    hx-target={ fmt.Sprintf("#broadcast%d_files%d", bf.BroadcastId, bf.VideofileId) }
                >
                    Delete
                </button>
                
                <div id={ fmt.Sprintf("broadcast%d_files%d", bf.BroadcastId, bf.VideofileId) }>
                </div>
            </article>
        }
    </div>
}

templ Broadcasts_users(broadcast_users []models.BroadcastUsers, users []models.User, broadcasts []models.Broadcast) {
			
<details>
					<summary>Filter</summary>
				<div id="filter">
<form hx-post="/filter/broadcasts_users" hx-target="#table">
	<select name="broadcastId">
		<option value="">Broadcast</option>
		for _,broadcast := range broadcasts{
<option value={fmt.Sprintf("%d", broadcast.Id)}>{broadcast.StartTime.Format(time.DateTime) } - { broadcast.EndTime.Format(time.DateTime) }</option>
		}
	</select>
	<select name="userId">
		<option value="">User</option>
		for _,user := range users{
<option value={fmt.Sprintf("%d", user.Id)}>{user.Nickname} ({user.Email})</option>
		}
	</select>
	<input type="submit" value="Filter">
</form>
				</div>
				</details>
				<div id="sort">
					<nav>
					<li>
						<details class="dropdown">
						<summary>Broadcast</summary>
						<ul>
							<li
						hx-get="/sort/broadcasts_users/broadcastid/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/broadcasts_users/broadcastid/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details>
					</li>
					<li><details class="dropdown">
						<summary>User</summary>
						<ul>
							<li
						hx-get="/sort/broadcasts_users/userid/asc"
						hx-target="#table"
							>Ascending</li>
							<li
						hx-get="/sort/broadcasts_users/userid/desc"
						hx-target="#table"
							>Descending</li>
						</ul>
					</details>
					</li>
					</nav>
				</div>

				@BroadcastsUsersTable(broadcast_users, users, broadcasts)
			}
			
			templ BroadcastsUsersTable(broadcast_users []models.BroadcastUsers, users []models.User, broadcasts []models.Broadcast) {
				<div id="table">
					for _, bu := range broadcast_users {
						<article>
							<form 
								hx-post={ fmt.Sprintf("/api/patch/broadcasts-users/%d?user_id=%d", bu.BroadcastId, bu.UserId) }
								hx-confirm="Are you sure you wish to update this record?"
								hx-target={ fmt.Sprintf("#broadcast%d_users%d", bu.BroadcastId, bu.UserId) }
							>
								<label>Broadcast</label>
								<select name="broadcastId">
									for _, broadcast := range broadcasts {
										if broadcast.Id == bu.BroadcastId {
											<option value={fmt.Sprintf("%d", broadcast.Id)} selected>
												{broadcast.StartTime.Format(time.DateTime)} - {broadcast.EndTime.Format(time.DateTime)}

											</option>
										} else {
											<option value={fmt.Sprintf("%d", broadcast.Id)}>
												{broadcast.StartTime.Format(time.DateTime)} - {broadcast.EndTime.Format(time.DateTime)}

											</option>
										}
									}
								</select>
			
								<label>User</label>
								<select name="userId">
									for _, user := range users {
										if user.Id == bu.UserId {
											<option value={fmt.Sprintf("%d", user.Id)} selected>
												{user.Nickname} ({user.Email})
											</option>
										} else {
											<option value={fmt.Sprintf("%d", user.Id)}>
												{user.Nickname} ({user.Email})
											</option>
										}
									}
								</select>
			
								<button type="submit">Update</button>
							</form>
			
							<button
								type="button"
								hx-delete={ fmt.Sprintf("/api/delete/broadcasts_users/%d?user_id=%d", bu.BroadcastId, bu.UserId) }
								hx-confirm="Are you sure you wish to delete this record? IT CAN'T BE UNDONE!"
								hx-target={ fmt.Sprintf("#broadcast%d_users%d", bu.BroadcastId, bu.UserId) }
							>
								Delete
							</button>
			
							<div id={ fmt.Sprintf("broadcast%d_users%d", bu.BroadcastId, bu.UserId) }></div>
						</article>
					}
				</div>
			}
			

